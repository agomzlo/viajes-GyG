---
import { db, eq, Cities, Monuments, Countries, PostCard } from 'astro:db';
 
import Layout from '@/layouts/Layout.astro';
import LeftIcon from '@/icons/astro/LeftIcon.astro';
import RightIcon from '@/icons/astro/RightIcon.astro';
import TotalMonuments from '@/sections/city/TotalMonuments.tsx';
import LastMonumentVisited from '@/sections/city/LastMonumentVisited.astro';
import Stamps from '@/sections/city/Stamps.astro';
import ShowMonuments from '@/components/ShowMonuments';
import CityPostCards from '@/sections/city/CityPostCards';

const { country, city } = Astro.params;
const { user } = Astro.locals;

const currentCountry = await db.select().from(Countries).where(eq(Countries.name, country!));
const cities = await db.select().from(Cities).where(eq(Cities.countryId, currentCountry[0].id));
const totalCities = cities.length;
const currentCity = cities.filter((actualCity) => actualCity.name === city)[0];

const currentCityIndex = cities.findIndex((actualCity) => actualCity.id === currentCity.id);
const prevCityIndex = currentCityIndex === 0 ? totalCities - 1 : currentCityIndex - 1;
const prevCityName = cities[prevCityIndex].name;
const prevCityUrl = `/country/${country}/city/${prevCityName}`
const nextCityIndex = currentCityIndex === totalCities - 1 ? 0 : currentCityIndex + 1;
const nextCityName = cities[nextCityIndex].name;
const nextCityUrl = `/country/${country}/city/${nextCityName}`;

const monuments = await db.select().from(Monuments).where(eq(Monuments.cityId, currentCity.id)).orderBy(Monuments.optional, Monuments.name);

const postCards = await db.select().from(PostCard).where(eq(PostCard.cityId, currentCity.id));
const currentPostCard = postCards.filter((postCard) => postCard.monumentId === null);
---
<Layout title="Planificador De Viajes">
	<main class="flex flex-col min-h-screen p-4">
        <div class="relative flex flex-col w-full h-full bg-white mt-[75vh] mb-[25vh] rounded-lg px-4 py-8 shadow-xl shadow-black/25">
            <!-- TODO: Agregar opcion de poder cambiar el nombre de la ciudad -->
            <h1 class="text-4xl md:text-6xl font-bold text-center">{currentCity.name}</h1>
                <TotalMonuments monuments={monuments} user={user} client:load/>
                <LastMonumentVisited monuments={monuments} />
                <Stamps user={user} />
                <ShowMonuments user={user} monuments={monuments} currentCity={currentCity} country={country!} client:load/>
                <CityPostCards country={country!} currentCity={currentCity} user={user} postcards={currentPostCard} />
            {
                currentCity.completed && (
                    <div class="absolute -top-3 -right-3 bg-green-500 text-white px-2 py-1 rounded-md uppercase">
                        Completado
                    </div>
                )
            }
        </div>
        {
            totalCities > 1 && (
                <div class="fixed left-2 md:left-4 h-screen flex flex-col justify-center">
                    <a href=`${prevCityUrl}` class="text-gray-500/50 bg-white/50 rounded-full hover:text-gray-500 hover:bg-white hover:scale-105 transition-all">
                        <LeftIcon class="h-8 md:h-10 w-8 md:w-10"/>
                    </a>
                </div>
                <div class="fixed right-2 md:right-4 h-screen flex flex-col justify-center">
                    <a href=`${nextCityUrl}` class="text-gray-500/50 bg-white/50 rounded-full hover:text-gray-500 hover:bg-white hover:scale-105 transition-all">
                        <RightIcon class="h-8 md:h-10 w-8 md:w-10"/>
                    </a>
                </div>
            )
        }
        <img 
            class="fixed inset-0 w-full h-full object-cover object-center -z-[2] brightness-75" 
            src={currentCity.image} 
            alt=""
            transition:name=`${city} image`
        >
	</main>
</Layout>